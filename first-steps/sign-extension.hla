program signExtension;
#include("stdlib.hhf")

static
    i8: int8;
    i16: int16;
    i32: int32;

begin signExtension;

    stdout.put("Enter a small negative number: ");
    stdin.get(i8);

    stdout.put(nl, "Sign extension using CBW and CWDE:", nl, nl);

    mov(i8, al);
    stdout.put("You entered ", i8, " ($", al, ")", nl);
    
    cbw(); // Extend the signs of AL and move it to AX

    mov(ax, i16);
    stdout.put("16-bit sign extension: ", i16, "($", ax, ")", nl);

    cwde(); // Extend the sign in AX and move to EAX

    mov( eax, i32 );
    stdout.put( "32-bit sign extension: ", i32, " ($", eax, ")", nl );

    stdout.put( nl, "Sign extension using MOVSX:", nl, nl );

    movsx(i8, ax); // Extend the sign to 16 bit
    mov( ax, i16 );
    stdout.put( "16-bit sign extension: ", i16, " ($", ax, ")", nl );

    movsx( i8, eax ); // Extend the sign to 32 bit
    mov( eax, i32 );
    stdout.put( "32-bit sign extension: ", i32, " ($", eax, ")", nl );

end signExtension;